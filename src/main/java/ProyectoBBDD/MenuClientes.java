/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ProyectoBBDD;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author alumno
 */
public class MenuClientes extends javax.swing.JFrame {

    /**
     * Creates new form Clientes
     */
    public MenuClientes() {
        initComponents();
        desactivar();
        this.letraNIF.setText("J");
        this.letraNIF.setEnabled(false);
        this.totalVentas.setText("0");
        this.totalVentas.setEnabled(false);
    }

    boolean botonAltas = false;
    boolean botonBajas = false;
    boolean botonModificaciones = false;
    String URL = "jdbc:mysql://localhost/tienda";
    String USUARIO = "johann";
    String CONTRA = "manager";

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textocodigo = new javax.swing.JLabel();
        codigo = new javax.swing.JTextField();
        textoNIF = new javax.swing.JLabel();
        NIF = new javax.swing.JTextField();
        nombre = new javax.swing.JTextField();
        textoNombre = new javax.swing.JLabel();
        apellidos = new javax.swing.JTextField();
        textoApellidos = new javax.swing.JLabel();
        domicilio = new javax.swing.JTextField();
        textoDomicilio = new javax.swing.JLabel();
        CP = new javax.swing.JTextField();
        textoCP = new javax.swing.JLabel();
        localidad = new javax.swing.JTextField();
        textoLocalidad = new javax.swing.JLabel();
        telefono = new javax.swing.JTextField();
        textoTelefono = new javax.swing.JLabel();
        movil = new javax.swing.JTextField();
        textoMovil = new javax.swing.JLabel();
        fax = new javax.swing.JTextField();
        textoFax = new javax.swing.JLabel();
        mail = new javax.swing.JTextField();
        textoMail = new javax.swing.JLabel();
        totalVentas = new javax.swing.JTextField();
        textoVentas = new javax.swing.JLabel();
        letraNIF = new javax.swing.JTextField();
        btnAceptar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        menu = new javax.swing.JMenuBar();
        mantenimiento = new javax.swing.JMenu();
        altas = new javax.swing.JMenuItem();
        bajas = new javax.swing.JMenuItem();
        modificaciones = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        volver = new javax.swing.JMenuItem();
        consultas = new javax.swing.JMenu();
        PC = new javax.swing.JMenu();
        listado = new javax.swing.JMenu();
        graficos = new javax.swing.JMenuItem();
        entreCodigo = new javax.swing.JMenuItem();
        porCodigo = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        textocodigo.setText("Codigo");

        codigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codigoActionPerformed(evt);
            }
        });
        codigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                codigoKeyPressed(evt);
            }
        });

        textoNIF.setText("N.I.F.");

        NIF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NIFActionPerformed(evt);
            }
        });

        nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreActionPerformed(evt);
            }
        });

        textoNombre.setText("Nombre");

        apellidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apellidosActionPerformed(evt);
            }
        });

        textoApellidos.setText("Apellidos");

        domicilio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                domicilioActionPerformed(evt);
            }
        });

        textoDomicilio.setText("Domicilio");

        CP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CPActionPerformed(evt);
            }
        });

        textoCP.setText("Codigo Postal");

        localidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                localidadActionPerformed(evt);
            }
        });

        textoLocalidad.setText("Localidad");

        telefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                telefonoActionPerformed(evt);
            }
        });

        textoTelefono.setText("Telefono");

        movil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movilActionPerformed(evt);
            }
        });

        textoMovil.setText("Movil");

        fax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                faxActionPerformed(evt);
            }
        });

        textoFax.setText("Fax");

        mail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mailActionPerformed(evt);
            }
        });

        textoMail.setText("e-mail");

        totalVentas.setText("0.0");

        textoVentas.setText("Total Ventas");

        letraNIF.setText("J");
        letraNIF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                letraNIFActionPerformed(evt);
            }
        });

        btnAceptar.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        btnAceptar.setText("Aceptar");
        btnAceptar.setMaximumSize(new java.awt.Dimension(75, 25));
        btnAceptar.setMinimumSize(new java.awt.Dimension(75, 25));
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setMaximumSize(new java.awt.Dimension(81, 25));
        btnCancelar.setMinimumSize(new java.awt.Dimension(81, 25));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnSalir.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.setMaximumSize(new java.awt.Dimension(57, 25));
        btnSalir.setMinimumSize(new java.awt.Dimension(57, 25));
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        mantenimiento.setText("Mantenimiento");

        altas.setText("Altas");
        altas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                altasActionPerformed(evt);
            }
        });
        mantenimiento.add(altas);

        bajas.setText("Bajas");
        bajas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bajasActionPerformed(evt);
            }
        });
        mantenimiento.add(bajas);

        modificaciones.setText("Modificaciones");
        modificaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificacionesActionPerformed(evt);
            }
        });
        mantenimiento.add(modificaciones);
        mantenimiento.add(jSeparator1);

        volver.setText("Volver");
        volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverActionPerformed(evt);
            }
        });
        mantenimiento.add(volver);

        menu.add(mantenimiento);

        consultas.setText("Consultas");

        PC.setText("Por Codigo");

        listado.setText("Listado");

        graficos.setText("Graficos");
        graficos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graficosActionPerformed(evt);
            }
        });
        listado.add(graficos);

        entreCodigo.setText("Entre codigos");
        entreCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entreCodigoActionPerformed(evt);
            }
        });
        listado.add(entreCodigo);

        porCodigo.setText("Por Codigo");
        porCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                porCodigoActionPerformed(evt);
            }
        });
        listado.add(porCodigo);

        PC.add(listado);

        consultas.add(PC);

        menu.add(consultas);

        setJMenuBar(menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(domicilio, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textoApellidos)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textocodigo)
                                    .addComponent(codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(textoNIF)
                                        .addGap(93, 93, 93))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(NIF, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(letraNIF, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textoNombre)
                                    .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(textoTelefono)
                                .addGap(64, 64, 64)
                                .addComponent(textoMovil)
                                .addGap(78, 78, 78)
                                .addComponent(textoFax))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textoMail)
                                    .addComponent(mail, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textoVentas)
                                    .addComponent(totalVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(textoDomicilio)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(telefono, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(movil, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(fax, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(textoCP)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(CP, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textoLocalidad)
                                    .addComponent(localidad, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(apellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(textocodigo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textoNIF, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(textoNombre, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(letraNIF, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(NIF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(18, 18, 18)
                .addComponent(textoApellidos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(apellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(textoDomicilio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(domicilio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(textoCP)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(textoLocalidad)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(localidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textoFax, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(textoTelefono)
                        .addComponent(textoMovil)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fax, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(movil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(textoMail)
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(textoVentas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(totalVentas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void codigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codigoActionPerformed

    }//GEN-LAST:event_codigoActionPerformed

    private void letraNIFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_letraNIFActionPerformed

    }//GEN-LAST:event_letraNIFActionPerformed

    private void faxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_faxActionPerformed

    }//GEN-LAST:event_faxActionPerformed

    private void telefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_telefonoActionPerformed

    }//GEN-LAST:event_telefonoActionPerformed

    private void movilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_movilActionPerformed

    }//GEN-LAST:event_movilActionPerformed

    private void CPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CPActionPerformed

    }//GEN-LAST:event_CPActionPerformed

    private void localidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_localidadActionPerformed

    }//GEN-LAST:event_localidadActionPerformed

    private void mailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mailActionPerformed

    }//GEN-LAST:event_mailActionPerformed

    private void NIFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NIFActionPerformed

    }//GEN-LAST:event_NIFActionPerformed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        if (botonAltas == true) {
            activar();
            if (comprobar() == true) {
                altas();
                despuesDeAceptar();
            }
        } else if (botonBajas == true) {
            bajas();
            despuesDeAceptar();

        } else if (botonModificaciones == true) {
            activar();
            if (comprobar() == true) {
                modificaciones();
                despuesDeAceptar();
            }
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    public boolean comprobar() {
        //Condiciones del botón de código.
        if (this.codigo.getText().matches("[0-9]+") == false || this.codigo.getText().length() != 6) {
            JOptionPane.showConfirmDialog(this, "El formato debe ser de 6 numeros", "Codigo error", JOptionPane.CLOSED_OPTION);
            return false;
        } //Condición NIF
        else if (this.NIF.getText().matches("[0-9]+") == false || this.NIF.getText().length() != 8) {
            JOptionPane.showConfirmDialog(this, "El formato debe ser de 8 numeros", "NIF error", JOptionPane.CLOSED_OPTION);
            return false;
        } //Condición Nombre
        else if (this.nombre.getText().matches("[a-zA-Z]+") == false || this.nombre.getText().length() == 0) {
            JOptionPane.showConfirmDialog(this, "Formato erroneo", "Nombre error", JOptionPane.CLOSED_OPTION);
            return false;
        } //Condición Apellido
        else if (this.apellidos.getText().matches("[a-zA-Z]+") == false || this.apellidos.getText().length() == 0) {
            JOptionPane.showConfirmDialog(this, "Formato erroneo", "Apellido error", JOptionPane.CLOSED_OPTION);
            return false;
        } //Condición código postal(C.P)
        else if (this.CP.getText().matches("[0-9]+") == false || this.CP.getText().length() != 5) {
            JOptionPane.showConfirmDialog(this, "El formato debe ser de 5 numeros", "Codigo postal error", JOptionPane.CLOSED_OPTION);
            return false;
        } else if (this.domicilio.getText().matches("[a-zA-Z]+") == false || this.domicilio.getText().length() == 0) {
            JOptionPane.showConfirmDialog(this, "Formato erroneo", "Domicilio error", JOptionPane.CLOSED_OPTION);
            return false;
        } //Condición localidad
        else if (this.localidad.getText().matches("[a-zA-Z]+") == false || this.localidad.getText().length() == 0) {
            JOptionPane.showConfirmDialog(this, "Formato erroneo", "Localidad error", JOptionPane.CLOSED_OPTION);
            return false;
        } //Conndición teléfono
        else if (!this.telefono.getText().isEmpty() && !this.telefono.getText().matches("\\d{9}")) {
            JOptionPane.showConfirmDialog(this, "El telefono debe tener 9 numeros", "Teléfono error", JOptionPane.CLOSED_OPTION);
            return false;
        } else if (!this.movil.getText().isEmpty() && !this.movil.getText().matches("\\d{9}")) {
            JOptionPane.showConfirmDialog(this, "El movil debe tener 9 numeros", "Móvil error", JOptionPane.CLOSED_OPTION);
            return false;
        } else if (!this.fax.getText().isEmpty() && !this.fax.getText().matches("\\d{9}")) {
            JOptionPane.showConfirmDialog(this, "El fax debe tener 9 numeros", "Fax error", JOptionPane.CLOSED_OPTION);
            return false;
        } else if (!this.mail.getText().isEmpty() && !this.mail.getText().matches("^[a-zA-Z0-9._%+-]+@gmail\\.com$")) {
            JOptionPane.showMessageDialog(this, "Formato erroneo", "E-mail error", JOptionPane.CLOSED_OPTION);
            return false;
        }
        return true;
    }

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        despuesDeAceptar();
        desactivar();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void volverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverActionPerformed
        new Mantenimiento().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_volverActionPerformed

    private void altasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_altasActionPerformed
        botonAltas = true;
        botonBajas = false;
        botonModificaciones = false;
        this.codigo.setEnabled(true);
        fallo();
    }//GEN-LAST:event_altasActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        despuesDeAceptar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void entreCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entreCodigoActionPerformed
        new EntreCodigos().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_entreCodigoActionPerformed

    private void bajasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bajasActionPerformed
        botonAltas = false;
        botonBajas = true;
        botonModificaciones = false;
        this.codigo.setEnabled(true);
        fallo();
    }//GEN-LAST:event_bajasActionPerformed

    private void modificacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificacionesActionPerformed
        botonAltas = false;
        botonBajas = false;
        botonModificaciones = true;
        this.codigo.setEnabled(true);
        fallo();
    }//GEN-LAST:event_modificacionesActionPerformed

    private void graficosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_graficosActionPerformed
        generarIReport();
    }//GEN-LAST:event_graficosActionPerformed

    private void porCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_porCodigoActionPerformed
        new PorCodigo().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_porCodigoActionPerformed

    private void nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreActionPerformed

    }//GEN-LAST:event_nombreActionPerformed

    private void domicilioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_domicilioActionPerformed

    }//GEN-LAST:event_domicilioActionPerformed

    private void apellidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apellidosActionPerformed

    }//GEN-LAST:event_apellidosActionPerformed

    private void codigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codigoKeyPressed
        if (botonAltas == true) {
            if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                if ((this.codigo.getText().matches("\\d{6}")) && !(this.codigo.getText().isEmpty())) {
                    if (!codigoExiste(this.codigo.getText())) {
                        activar();
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "EL codigo ya existe en la base de datos");
                    }

                } else {
                    JOptionPane.showMessageDialog(rootPane, "Debe introducir un codigo y tiene que ser de 6 digitos");
                }
            }
        } else if (botonBajas == true) {
            if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                btnAceptar.setEnabled(true);
            }
        }

    }//GEN-LAST:event_codigoKeyPressed

    public boolean codigoExiste(String codigo) {
        try {
            Connection conexion = DriverManager.getConnection(URL, USUARIO, CONTRA);
            String sql = """
                        SELECT COUNT(*)
                        FROM clientes
                        WHERE codigo = ?
                        """;

            try (PreparedStatement ps = conexion.prepareStatement(sql)) {
                ps.setString(1, codigo);

                ResultSet rs = ps.executeQuery();

                if (rs.next()) {
                    return rs.getInt(1) > 0;
                }

                rs.close();
            }
        } catch (SQLException ex) {
            Logger.getLogger(MenuClientes.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Error al conectar con la base de datos: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        return false;

    }

    public void generarIReport() {
        Connection conexion;
        try {
            conexion = DriverManager.getConnection(URL, USUARIO, CONTRA);
            System.out.println("Conexión exitosa a la base de datos.");

            String informeOrigen = "C:\\Users\\Usuario\\Documents\\NetBeansProjects\\Proyecto-Final-Interfaces-master\\src\\main\\java\\ireportGrafico\\reportClientes.jasper";
            String informeDestino = "C:\\Users\\Usuario\\Documents\\NetBeansProjects\\Proyecto-Final-Interfaces-master\\src\\main\\java\\ireportGrafico\\reportClientes.pdf";

            try {
                JasperPrint jasperPrint = JasperFillManager.fillReport(informeOrigen, null, conexion);
                System.out.println("GENERANDO INFORME");
                JasperExportManager.exportReportToPdfFile(jasperPrint, informeDestino);

                // Mostrar el informe
                JasperViewer.viewReport(jasperPrint, false);
            } catch (JRException ex) {
                System.err.print(ex.getMessage());
            }
        } catch (SQLException e) {
            System.err.println("Error al conectar con la base de datos: " + e.getMessage());
        }
    }

    public void altas() {
        try {
            Connection conexion = DriverManager.getConnection(URL, USUARIO, CONTRA);
            String sql = """
                         INSERT INTO clientes(codigo, nif, apellidos, nombre, domicilio, codigoPostal, localidad, telefono, movil, fax, mail, totalVentas)
                         VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                         """;

            try (PreparedStatement ps = conexion.prepareStatement(sql)) {
                ps.setString(1, this.codigo.getText());
                ps.setString(2, this.NIF.getText());
                ps.setString(3, this.apellidos.getText());
                ps.setString(4, this.nombre.getText());
                ps.setString(5, this.domicilio.getText());
                ps.setString(6, this.CP.getText());
                ps.setString(7, this.localidad.getText());
                ps.setString(8, this.telefono.getText());
                ps.setString(9, this.movil.getText());
                ps.setString(10, this.fax.getText());
                ps.setString(11, this.mail.getText());
                ps.setFloat(12, Float.parseFloat(this.totalVentas.getText()));

                int filas = ps.executeUpdate();

                if (filas > 0) {
                    JOptionPane.showMessageDialog(rootPane, "CLIENTE INSERTDO CORRECTAMENTE");
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(MenuClientes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void bajas() {
        try {
            Connection conexion = DriverManager.getConnection(URL, USUARIO, CONTRA);
            String sql = """
                         DELETE FROM clientes
                         WHERE codigo = ?
                         """;

            try (PreparedStatement ps = conexion.prepareStatement(sql)) {
                ps.setString(1, this.codigo.getText());

                int filas = ps.executeUpdate();

                if (filas > 0) {
                    JOptionPane.showMessageDialog(rootPane, "CLIENTE BORRADO CORRECTAMENTE");
                } else {
                    JOptionPane.showMessageDialog(rootPane, "NO SE ENCONTRO UN CLIENTE CON ESE CODIGO");
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(MenuClientes.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, "ERROR AL BORRAR CLIENTE: " + ex.getMessage());
        }
    }

    public void modificaciones() {
        try {
            Connection conexion = DriverManager.getConnection(URL, USUARIO, CONTRA);
            String sql = """
                         UPDATE clientes SET
                         apellidos = ?,
                         nombre = ?,
                         domicilio = ?,
                         codigoPostal = ?,
                         localidad = ?,
                         telefono = ?,
                         movil = ?,
                         fax = ?,
                         mail = ?
                         WHERE codigo = ?
                         """;

            try (PreparedStatement ps = conexion.prepareStatement(sql)) {
                ps.setString(1, NIF.getText());
                ps.setString(2, apellidos.getText());
                ps.setString(3, nombre.getText());
                ps.setString(4, domicilio.getText());
                ps.setString(5, CP.getText());
                ps.setString(6, localidad.getText());
                ps.setString(7, telefono.getText());
                ps.setString(8, movil.getText());
                ps.setString(9, fax.getText());
                ps.setString(10, mail.getText());
                ps.setFloat(11, Float.parseFloat(totalVentas.getText()));
                ps.setString(12, codigo.getText());

                int filas = ps.executeUpdate();

                if (filas > 0) {
                    JOptionPane.showMessageDialog(rootPane, "CLIENTE ACTUALIZADO CORRECTAMENTE");
                } else {
                    JOptionPane.showMessageDialog(rootPane, "NO SE ENCONTRO UN CLIENTE CON ESE CODIGO");
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(MenuClientes.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, "ERROR AL ACTUALIZAR CLIENTE: " + ex.getMessage());
        }
    }

    public void despuesDeAceptar() {
        this.codigo.setText("");
        this.NIF.setText("");
        this.nombre.setText("");
        this.apellidos.setText("");
        this.domicilio.setText("");
        this.CP.setText("");
        this.localidad.setText("");
        this.telefono.setText("");
        this.movil.setText("");
        this.fax.setText("");
        this.mail.setText("");
        this.totalVentas.setText("");
        this.codigo.grabFocus();
    }

    public void desactivar() {
        this.codigo.setEnabled(false);
        this.NIF.setEnabled(false);
        this.nombre.setEnabled(false);
        this.apellidos.setEnabled(false);
        this.domicilio.setEnabled(false);
        this.CP.setEnabled(false);
        this.localidad.setEnabled(false);
        this.telefono.setEnabled(false);
        this.movil.setEnabled(false);
        this.fax.setEnabled(false);
        this.mail.setEnabled(false);
        this.btnAceptar.setEnabled(false);
        this.btnCancelar.setEnabled(false);
        this.btnSalir.setEnabled(false);
    }

    public void fallo() {
        this.codigo.setText("");
        this.NIF.setEnabled(false);
        this.nombre.setEnabled(false);
        this.apellidos.setEnabled(false);
        this.domicilio.setEnabled(false);
        this.CP.setEnabled(false);
        this.localidad.setEnabled(false);
        this.telefono.setEnabled(false);
        this.movil.setEnabled(false);
        this.fax.setEnabled(false);
        this.mail.setEnabled(false);
        this.btnAceptar.setEnabled(false);
        this.btnCancelar.setEnabled(false);
        this.btnSalir.setEnabled(false);
    }

    private void activar() {
        this.codigo.setEnabled(true);
        this.NIF.setEnabled(true);
        this.nombre.setEnabled(true);
        this.apellidos.setEnabled(true);
        this.domicilio.setEnabled(true);
        this.CP.setEnabled(true);
        this.localidad.setEnabled(true);
        this.telefono.setEnabled(true);
        this.movil.setEnabled(true);
        this.fax.setEnabled(true);
        this.mail.setEnabled(true);
        this.btnAceptar.setEnabled(true);
        this.btnCancelar.setEnabled(true);
        this.btnSalir.setEnabled(true);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuClientes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CP;
    private javax.swing.JTextField NIF;
    private javax.swing.JMenu PC;
    private javax.swing.JMenuItem altas;
    private javax.swing.JTextField apellidos;
    private javax.swing.JMenuItem bajas;
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JTextField codigo;
    private javax.swing.JMenu consultas;
    private javax.swing.JTextField domicilio;
    private javax.swing.JMenuItem entreCodigo;
    private javax.swing.JTextField fax;
    private javax.swing.JMenuItem graficos;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTextField letraNIF;
    private javax.swing.JMenu listado;
    private javax.swing.JTextField localidad;
    private javax.swing.JTextField mail;
    private javax.swing.JMenu mantenimiento;
    private javax.swing.JMenuBar menu;
    private javax.swing.JMenuItem modificaciones;
    private javax.swing.JTextField movil;
    private javax.swing.JTextField nombre;
    private javax.swing.JMenuItem porCodigo;
    private javax.swing.JTextField telefono;
    private javax.swing.JLabel textoApellidos;
    private javax.swing.JLabel textoCP;
    private javax.swing.JLabel textoDomicilio;
    private javax.swing.JLabel textoFax;
    private javax.swing.JLabel textoLocalidad;
    private javax.swing.JLabel textoMail;
    private javax.swing.JLabel textoMovil;
    private javax.swing.JLabel textoNIF;
    private javax.swing.JLabel textoNombre;
    private javax.swing.JLabel textoTelefono;
    private javax.swing.JLabel textoVentas;
    private javax.swing.JLabel textocodigo;
    private javax.swing.JTextField totalVentas;
    private javax.swing.JMenuItem volver;
    // End of variables declaration//GEN-END:variables
}
